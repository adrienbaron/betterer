"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4420],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),g=a,b=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return r?n.createElement(b,i(i({ref:t},s),{},{components:r})):n.createElement(b,i({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1395:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={id:"coverage.betterercoveragetest.include",title:"BettererCoverageTest.include()",sidebar_label:"BettererCoverageTest.include()",slug:"/coverage.betterercoveragetest.include"},c=void 0,u={unversionedId:"api/coverage.betterercoveragetest.include",id:"api/coverage.betterercoveragetest.include",title:"BettererCoverageTest.include()",description:"API &gt; @betterer/coverage &gt; BettererCoverageTest &gt; include",source:"@site/docs/api/coverage.betterercoveragetest.include.md",sourceDirName:"api",slug:"/coverage.betterercoveragetest.include",permalink:"/betterer/docs/coverage.betterercoveragetest.include",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/coverage.betterercoveragetest.include.md",tags:[],version:"current",frontMatter:{id:"coverage.betterercoveragetest.include",title:"BettererCoverageTest.include()",sidebar_label:"BettererCoverageTest.include()",slug:"/coverage.betterercoveragetest.include"}},s={},p=[{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}],d={toc:p};function g(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage"},"@betterer/coverage")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoveragetest"},"BettererCoverageTest")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoveragetest.include"},"include")),(0,o.kt)("p",null,"Add a list of ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/glob#user-content-glob-primer"},"glob")," patterns for files to include when running the test."),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"include(...includePatterns: BettererFileGlobs): this;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"includePatterns"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfileglobs"},"BettererFileGlobs")),(0,o.kt)("td",{parentName:"tr",align:null},"Glob patterns to match file paths that should be included. All ",(0,o.kt)("code",null,"includes")," should be relative to the ",(0,o.kt)("a",{parentName:"td",href:"https://phenomnomnominal.github.io/betterer/docs/test-definition-file"},"test definition file"),".")))),(0,o.kt)("h2",{id:"returns"},"Returns"),(0,o.kt)("p",null,"this"),(0,o.kt)("p",null,"This ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoveragetest"},(0,o.kt)("inlineCode",{parentName:"a"},"BettererCoverageTest")),", so it is chainable."))}g.isMDXComponent=!0}}]);