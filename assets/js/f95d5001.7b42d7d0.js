"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8475],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=u(r),m=a,d=b["".concat(s,".").concat(m)]||b[m]||c[m]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},1014:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={id:"betterer.betterersuite",title:"BettererSuite",sidebar_label:"BettererSuite",slug:"/betterer.betterersuite"},s=void 0,u={unversionedId:"api/betterer.betterersuite",id:"api/betterer.betterersuite",title:"BettererSuite",description:"API &gt; @betterer/betterer &gt; BettererSuite",source:"@site/docs/api/betterer.betterersuite.md",sourceDirName:"api",slug:"/betterer.betterersuite",permalink:"/betterer/docs/betterer.betterersuite",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.betterersuite.md",tags:[],version:"current",frontMatter:{id:"betterer.betterersuite",title:"BettererSuite",sidebar_label:"BettererSuite",slug:"/betterer.betterersuite"}},p={},c=[{value:"Signature",id:"signature",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2},{value:"Properties",id:"properties",level:2}],b={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterersuite"},"BettererSuite")),(0,i.kt)("p",null,"A set of ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertest"},(0,i.kt)("inlineCode",{parentName:"a"},"BettererTest"))," runs. Will become a ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterersuitesummary"},(0,i.kt)("inlineCode",{parentName:"a"},"BettererSuiteSummary"))," when the test suite is completed."),(0,i.kt)("h2",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface BettererSuite \n")),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"The internal implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"BettererSuite")," is responsible for a lot more than this interface suggests, but we want to minimise the public API surface as much as possible. You can get the ",(0,i.kt)("inlineCode",{parentName:"p"},"BettererSuite")," via the ",(0,i.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererreporter"},(0,i.kt)("inlineCode",{parentName:"a"},"BettererReporter"))," interface."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const myReporter: BettererReporter = {\n  // Access the suite before any tests are run:\n  suiteStart (suite: BettererSuite) {\n    // ...\n  },\n  // Access the suite when something goes wrong:\n  suiteError (suite: BettererSuite) {\n    // ...\n  }\n}\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterersuite.filepaths"},"filePaths")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfilepaths"},"BettererFilePaths")),(0,i.kt)("td",{parentName:"tr",align:null},"An array of file paths that will be tested. The file paths can be specified by the global  and  properties. Also used by watch mode to target individual files.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterersuite.runs"},"runs")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererruns"},"BettererRuns")),(0,i.kt)("td",{parentName:"tr",align:null},"An array containing a ",(0,i.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererrun"},(0,i.kt)("inlineCode",{parentName:"a"},"BettererRun"))," for each test in the ",(0,i.kt)("a",{parentName:"td",href:"https://phenomnomnominal.github.io/betterer/docs/test-definition-file"},"test definition file"),".")))))}m.isMDXComponent=!0}}]);