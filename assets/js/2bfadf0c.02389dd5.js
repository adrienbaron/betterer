"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7618],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return v}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=u(t),v=o,f=g["".concat(s,".").concat(v)]||g[v]||l[v]||a;return t?n.createElement(f,c(c({ref:r},p),{},{components:t})):n.createElement(f,c({ref:r},p))}));function v(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=g;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=t[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},552:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var n=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],i={id:"coverage.betterercoverageissue",title:"BettererCoverageIssue",sidebar_label:"BettererCoverageIssue",slug:"/coverage.betterercoverageissue"},s=void 0,u={unversionedId:"api/coverage.betterercoverageissue",id:"api/coverage.betterercoverageissue",title:"BettererCoverageIssue",description:"API &gt; @betterer/coverage &gt; BettererCoverageIssue",source:"@site/docs/api/coverage.betterercoverageissue.md",sourceDirName:"api",slug:"/coverage.betterercoverageissue",permalink:"/betterer/docs/coverage.betterercoverageissue",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/coverage.betterercoverageissue.md",tags:[],version:"current",frontMatter:{id:"coverage.betterercoverageissue",title:"BettererCoverageIssue",sidebar_label:"BettererCoverageIssue",slug:"/coverage.betterercoverageissue"}},p=[{value:"Signature",id:"signature",children:[],level:2},{value:"References",id:"references",children:[],level:2}],l={toc:p};function g(e){var r=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/coverage"},"@betterer/coverage")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoverageissue"},"BettererCoverageIssue")),(0,a.kt)("p",null,"The lines, statements, functions and branches coverage for a file (or the total project)"),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type BettererCoverageIssue = Record<BettererCoverageTypes, number>;\n")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("p",null," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoveragetypes"},"BettererCoverageTypes")))}g.isMDXComponent=!0}}]);