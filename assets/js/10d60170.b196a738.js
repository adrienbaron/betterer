"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2319],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),f=a,b=u["".concat(s,".").concat(f)]||u[f]||d[f]||l;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2203:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=r(3117),a=r(102),l=(r(7294),r(3905)),i=["components"],o={id:"betterer.bettererfileresolver",title:"BettererFileResolver",sidebar_label:"BettererFileResolver",slug:"/betterer.bettererfileresolver"},s=void 0,p={unversionedId:"api/betterer.bettererfileresolver",id:"api/betterer.bettererfileresolver",isDocsHomePage:!1,title:"BettererFileResolver",description:"API &gt; @betterer/betterer &gt; BettererFileResolver",source:"@site/docs/api/betterer.bettererfileresolver.md",sourceDirName:"api",slug:"/betterer.bettererfileresolver",permalink:"/betterer/docs/betterer.bettererfileresolver",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.bettererfileresolver.md",tags:[],version:"current",frontMatter:{id:"betterer.bettererfileresolver",title:"BettererFileResolver",sidebar_label:"BettererFileResolver",slug:"/betterer.bettererfileresolver"}},c=[{value:"Signature",id:"signature",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Properties",id:"properties",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2}],d={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfileresolver"},"BettererFileResolver")),(0,l.kt)("p",null,"A helper for resolving file paths in a ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfiletest"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest")),"."),(0,l.kt)("h2",{id:"signature"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface BettererFileResolver \n")),(0,l.kt)("h2",{id:"remarks"},"Remarks"),(0,l.kt)("p",null,"For ergonomic reasons, a test consumer should be able to use ",(0,l.kt)("em",{parentName:"p"},"relative")," paths when they use a test, whether that be passing the path to a config file, or using ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfiletest.include"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest.include()"))," to select relevant files."),(0,l.kt)("p",null,"To enable that, ",(0,l.kt)("strong",{parentName:"p"},"Betterer")," creates a ",(0,l.kt)("inlineCode",{parentName:"p"},"BettererFileResolver")," whenever a ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfiletest"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest"))," is run. The ",(0,l.kt)("inlineCode",{parentName:"p"},"baseDirectory")," is set to the directory containing the ",(0,l.kt)("a",{parentName:"p",href:"https://phenomnomnominal.github.io/betterer/docs/test-definition-file"},"test definition file"),"."),(0,l.kt)("p",null,"Internally ",(0,l.kt)("strong",{parentName:"p"},"Betterer")," uses the ",(0,l.kt)("inlineCode",{parentName:"p"},"BettererFileResolver")," to manage file paths specifed by ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfiletest.include"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest.include()"))," and ",(0,l.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfiletest.exclude"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest.exclude")),". A test function can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"BettererFileResolver")," to resolve and validate file paths."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BettererFileTest } from '@betterer/betterer';\n\nexport function myFileTest (relativeConfigFilePath: string) {\n  return new BettererFileTest((_, __, resolver) => {\n    // Resolve a file path relative to the `baseDirectory`\n    const absoluteConfigFilePath = resolver.resolve(relativeConfigFilePath);\n\n    // Validate if some file paths are relevant for a test:\n    const validatedPaths = resolver.validate(\n      ['./file-1.js', './file-2.js', './file-3.ts']\n    );\n    // ['./file-1.js']\n  })\n  .include('**\\/*.js')\n  .exclude(/file-2.js/);\n};\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfileresolver.basedirectory"},"baseDirectory")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The direction from which all file paths are resolved.")))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfileresolver.resolve"},"resolve(pathSegments)")),(0,l.kt)("td",{parentName:"tr",align:null},"Resolve a file path relative to the ",(0,l.kt)("code",null,"baseDirectory"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfileresolver.validate"},"validate(filePaths)")),(0,l.kt)("td",{parentName:"tr",align:null},"Validate if some file paths are relevant for a test. Files can be included and excluded via ",(0,l.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfiletest.include"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest.include()"))," and ",(0,l.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.bettererfiletest.exclude"},(0,l.kt)("inlineCode",{parentName:"a"},"BettererFileTest.exclude()")),".")))))}u.isMDXComponent=!0}}]);