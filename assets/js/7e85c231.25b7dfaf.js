"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6945],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return v}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=p(r),v=l,f=b["".concat(s,".").concat(v)]||b[v]||c[v]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function v(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},5730:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var n=r(3117),l=r(102),a=(r(7294),r(3905)),o=["components"],i={id:"betterer.bettererfileresolver.resolve",title:"BettererFileResolver.resolve()",sidebar_label:"BettererFileResolver.resolve()",slug:"/betterer.bettererfileresolver.resolve"},s=void 0,p={unversionedId:"api/betterer.bettererfileresolver.resolve",id:"api/betterer.bettererfileresolver.resolve",title:"BettererFileResolver.resolve()",description:"API &gt; @betterer/betterer &gt; BettererFileResolver &gt; resolve",source:"@site/docs/api/betterer.bettererfileresolver.resolve.md",sourceDirName:"api",slug:"/betterer.bettererfileresolver.resolve",permalink:"/betterer/docs/betterer.bettererfileresolver.resolve",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/betterer.bettererfileresolver.resolve.md",tags:[],version:"current",frontMatter:{id:"betterer.bettererfileresolver.resolve",title:"BettererFileResolver.resolve()",sidebar_label:"BettererFileResolver.resolve()",slug:"/betterer.bettererfileresolver.resolve"}},u={},c=[{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}],b={toc:c};function v(e){var t=e.components,r=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer"},"@betterer/betterer")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfileresolver"},"BettererFileResolver")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.bettererfileresolver.resolve"},"resolve")),(0,a.kt)("p",null,"Resolve a file path relative to the ",(0,a.kt)("inlineCode",{parentName:"p"},"baseDirectory"),"."),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"resolve(...pathSegments: Array<string>): string;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"pathSegments"),(0,a.kt)("td",{parentName:"tr",align:null},"Array","<","string",">"),(0,a.kt)("td",{parentName:"tr",align:null},"String path segments to resolve. Works the same was as ",(0,a.kt)("a",{parentName:"td",href:"https://nodejs.org/api/path.html#pathresolvepaths"},"'path.resolve()'")," but with ",(0,a.kt)("code",null,"baseDirectory")," as the first argument.")))),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,"string"),(0,a.kt)("p",null,"The resolved path."))}v.isMDXComponent=!0}}]);