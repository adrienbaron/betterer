"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7474],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(g,l(l({ref:t},p),{},{components:r})):a.createElement(g,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5081:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=r(3117),n=r(102),o=(r(7294),r(3905)),l=["components"],s={id:"coverage",title:"coverage",sidebar_label:"coverage",slug:"/coverage"},i=void 0,c={unversionedId:"api/coverage",id:"api/coverage",title:"coverage",description:"API &gt; @betterer/coverage",source:"@site/docs/api/coverage.md",sourceDirName:"api",slug:"/coverage",permalink:"/betterer/docs/coverage",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/coverage.md",tags:[],version:"current",frontMatter:{id:"coverage",title:"coverage",sidebar_label:"coverage",slug:"/coverage"}},p={},u=[{value:"Classes",id:"classes",level:2},{value:"Functions",id:"functions",level:2},{value:"Type Aliases",id:"type-aliases",level:2}],m={toc:u};function d(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage"},"@betterer/coverage")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://istanbul.js.org/"},"Istanbul Coverage")," test for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/phenomnomnominal/betterer"},(0,o.kt)("strong",{parentName:"a"},"Betterer")),"."),(0,o.kt)("h2",{id:"classes"},"Classes"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Class"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoveragetest"},"BettererCoverageTest")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"BettererCoverageTest")," provides a wrapper around ",(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/betterer.betterertest"},(0,o.kt)("inlineCode",{parentName:"a"},"BettererTest"))," that makes it easier to implement coverage tests.")))),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.coverage"},"coverage(coverageSummaryPath)")),(0,o.kt)("td",{parentName:"tr",align:null},"Use this test to track your per-file test coverage. Reads a ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-reports/lib/json-summary/index.js"},"json-summary format")," coverage summary. Make sure to run your tests separately before running Betterer.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.coveragetotal"},"coverageTotal(coverageSummaryPath)")),(0,o.kt)("td",{parentName:"tr",align:null},"Use this test to track your total test coverage. Reads a ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-reports/lib/json-summary/index.js"},"json-summary format")," coverage summary. Make sure to run your tests separately before running Betterer.")))),(0,o.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type Alias"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoveragediff"},"BettererCoverageDiff")),(0,o.kt)("td",{parentName:"tr",align:null},"The difference in coverage for a project between two test runs")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoverageissue"},"BettererCoverageIssue")),(0,o.kt)("td",{parentName:"tr",align:null},"The lines, statements, functions and branches coverage for a file (or the total project)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoverageissues"},"BettererCoverageIssues")),(0,o.kt)("td",{parentName:"tr",align:null},"The coverage for a project")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoveragetypes"},"BettererCoverageTypes")),(0,o.kt)("td",{parentName:"tr",align:null},"The different types of coverage which are checked")))))}d.isMDXComponent=!0}}]);