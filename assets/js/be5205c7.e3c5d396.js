"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8862],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),l=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),g=n,v=d["".concat(i,".").concat(g)]||d[g]||u[g]||o;return r?a.createElement(v,s(s({ref:t},p),{},{components:r})):a.createElement(v,s({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9001:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=r(3117),n=r(102),o=(r(7294),r(3905)),s=["components"],c={id:"coverage.betterercoveragetest",title:"BettererCoverageTest",sidebar_label:"BettererCoverageTest",slug:"/coverage.betterercoveragetest"},i=void 0,l={unversionedId:"api/coverage.betterercoveragetest",id:"api/coverage.betterercoveragetest",title:"BettererCoverageTest",description:"API &gt; @betterer/coverage &gt; BettererCoverageTest",source:"@site/docs/api/coverage.betterercoveragetest.md",sourceDirName:"api",slug:"/coverage.betterercoveragetest",permalink:"/betterer/docs/coverage.betterercoveragetest",editUrl:"https://github.com/phenomnomnominal/betterer/edit/master/website/docs/api/coverage.betterercoveragetest.md",tags:[],version:"current",frontMatter:{id:"coverage.betterercoveragetest",title:"BettererCoverageTest",sidebar_label:"BettererCoverageTest",slug:"/coverage.betterercoveragetest"}},p=[{value:"Signature",id:"signature",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/index"},"API")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage"},"@betterer/coverage")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/coverage.betterercoveragetest"},"BettererCoverageTest")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"BettererCoverageTest")," provides a wrapper around ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertest"},(0,o.kt)("inlineCode",{parentName:"a"},"BettererTest"))," that makes it easier to implement coverage tests."),(0,o.kt)("h2",{id:"signature"},"Signature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class BettererCoverageTest extends BettererTest<BettererCoverageIssues, BettererCoverageIssues, BettererCoverageDiff> \n")),(0,o.kt)("b",null,"Extends:")," [BettererTest](/betterer/docs/betterer.betterertest)<[BettererCoverageIssues](/betterer/docs/coverage.betterercoverageissues), [BettererCoverageIssues](/betterer/docs/coverage.betterercoverageissues), [BettererCoverageDiff](/betterer/docs/coverage.betterercoveragediff)>",(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"BettererCoverageTest")," provides a useful example for the more complex possibilities of the ",(0,o.kt)("a",{parentName:"p",href:"/betterer/docs/betterer.betterertestoptions"},(0,o.kt)("inlineCode",{parentName:"a"},"BettererTestOptions"))," interface."),(0,o.kt)("p",null,"The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the ",(0,o.kt)("inlineCode",{parentName:"p"},"BettererCoverageTest")," class."),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Method"),(0,o.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoveragetest.exclude"},"exclude(excludePatterns)")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Add a list of ",(0,o.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"},"Regular Expression")," filters for files to exclude when running the test.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/betterer/docs/coverage.betterercoveragetest.include"},"include(includePatterns)")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Add a list of ",(0,o.kt)("a",{parentName:"td",href:"https://www.npmjs.com/package/glob#user-content-glob-primer"},"glob")," patterns for files to include when running the test.")))))}d.isMDXComponent=!0}}]);